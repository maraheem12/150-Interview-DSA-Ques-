/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public ListNode current;
    public TreeNode buildTree(int start, int end){
        if(start > end){
            return null;
        }

        int mid = (start+end)/2;

        TreeNode leftChild = buildTree(start, mid-1);

        TreeNode root = new TreeNode(this.current.val);
        this.current = this.current.next;
        
        root.left = leftChild;
        root.right = buildTree(mid+1, end);

        return root;
    }
    public TreeNode sortedListToBST(ListNode head) {
         if(head == null){
            return null;
         }
         int size = 0;
         ListNode temp = head;

         while(temp != null){
            size++;
            temp = temp.next;
         }
         current = head;

         return buildTree(0, size-1);
    }
}
