import java.util.*;

class Solution {
    public int[] avoidFlood(int[] rains) {
        int n = rains.length;
        int[] ans = new int[n];
        Arrays.fill(ans, -1);
        TreeSet<Integer> sunnyDays = new TreeSet<>();
        Map<Integer, Integer> lastRainDay = new HashMap<>();
        
        for (int i = 0; i < n; i++) {
            int lake = rains[i];
            if (lake > 0) {
                // It rains on lake “lake”
                if (lastRainDay.containsKey(lake)) {
                    int prevDay = lastRainDay.get(lake);
                    Integer dryDay = sunnyDays.higher(prevDay);
                    if (dryDay == null) {
                        return new int[0];
                    }
                    ans[dryDay] = lake;
                    sunnyDays.remove(dryDay);
                }
                lastRainDay.put(lake, i);
            } else {
                sunnyDays.add(i);
                ans[i] = 1;
            }
        }
        
        
        for (int d : sunnyDays) {
            ans[d] = 1;
        }
        
        return ans;
    }
}
