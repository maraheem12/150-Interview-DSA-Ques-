import java.util.Stack;

class Solution {
    public int calculate(String s) {
        
        Stack<Integer> stack = new Stack<>();
        int result = 0;
        int sign = 1; 

        for (int i = 0; i < s.length(); i++) {
            char currentChar = s.charAt(i);

            if (Character.isDigit(currentChar)) {
                
                int number = currentChar - '0';
                while (i + 1 < s.length() && Character.isDigit(s.charAt(i + 1))) {
                    number = number * 10 + (s.charAt(i + 1) - '0');
                    i++;
                }
                
                result += sign * number;
            } else if (currentChar == '+') {
                
                sign = 1;
            } else if (currentChar == '-') {
                
                sign = -1;
            } else if (currentChar == '(') {
                
                stack.push(result);
                stack.push(sign);
                
                
                result = 0;
                sign = 1;
            } else if (currentChar == ')') {
                
                int prevSign = stack.pop();
               
                int prevResult = stack.pop();
                
                
                result = prevResult + (prevSign * result);
            }
            
        }
        
        return result;
    }
}
